FROM mongo:7.0

# Cria diret√≥rios necess√°rios
RUN mkdir -p /var/log/mongodb /data/keyfile

# Gera keyfile para replica set com auth
RUN openssl rand -base64 756 > /data/keyfile/keyfile && \
    chown mongodb:mongodb /data/keyfile/keyfile && \
    chmod 600 /data/keyfile/keyfile

# Script de inicializa√ß√£o
ENTRYPOINT set -e; \
echo "üöÄ Iniciando MongoDB 7.0 com Replica Set..."; \
# Primeiro: inicia sem auth para setup inicial
mongod --port $MONGO_REPLICA_PORT --replSet rs0 --bind_ip 0.0.0.0 & MONGOD_PID=$!; \
# Aguarda MongoDB estar pronto
until mongosh admin --port $MONGO_REPLICA_PORT --eval "db.runCommand('ping').ok" --quiet; do sleep 1; done; \
echo "üì° MongoDB conectado, configurando replica set..."; \
# Inicia replica set
INIT_REPL_CMD="try { rs.initiate({ _id: 'rs0', members: [{ _id: 0, host: '$MONGO_REPLICA_HOST:$MONGO_REPLICA_PORT' }] }); print('‚úÖ Replica set initialized'); } catch(e) { print('‚ÑπÔ∏è  Replica set already exists or error:', e); }"; \
mongosh admin --port $MONGO_REPLICA_PORT --eval "$INIT_REPL_CMD" --quiet; \
# Aguarda replica set estar pronto
until mongosh admin --port $MONGO_REPLICA_PORT --eval "rs.isMaster().ismaster" --quiet; do sleep 1; done; \
echo "üë§ Criando usu√°rio root..."; \
# Cria usu√°rio root
INIT_USER_CMD="try { db.createUser({ user: '$MONGO_INITDB_ROOT_USERNAME', pwd: '$MONGO_INITDB_ROOT_PASSWORD', roles: [ 'root' ] }); print('‚úÖ Root user created'); } catch(e) { print('‚ÑπÔ∏è  User already exists or error:', e); }"; \
mongosh admin --port $MONGO_REPLICA_PORT --eval "$INIT_USER_CMD" --quiet; \
# Para o MongoDB tempor√°rio
kill $MONGOD_PID; wait $MONGOD_PID; \
echo "üîí Reiniciando com autentica√ß√£o ativada..."; \
# Reinicia com auth e keyfile
mongod --port $MONGO_REPLICA_PORT --replSet rs0 --bind_ip 0.0.0.0 --auth --keyFile /data/keyfile/keyfile & MONGOD_PID=$!; \
echo "‚úÖ MONGODB 7.0 WITH REPLICA SET + AUTH READY FOR PRISMA!"; \
wait $MONGOD_PID;
