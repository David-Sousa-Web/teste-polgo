name: CD - Build and Push

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  DOCKER_USERNAME: daviddev0508
  REGISTRY: docker.io

jobs:
  check-ci:
    runs-on: ubuntu-latest
    outputs:
      ci-passed: ${{ steps.ci-status.outputs.passed }}
    
    steps:
    - name: Wait for CI to complete
      uses: lewagon/wait-on-check-action@v1.3.4
      with:
        ref: ${{ github.ref }}
        check-name: 'summary'
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        wait-interval: 10

    - name: Check CI status
      id: ci-status
      run: echo "passed=true" >> $GITHUB_OUTPUT

  build-and-push:
    needs: check-ci
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Get metadata
      id: meta
      run: |
        echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

    - name: Build and push MongoDB
      uses: docker/build-push-action@v5
      with:
        context: ./mongodb_rs
        push: true
        tags: |
          ${{ env.DOCKER_USERNAME }}/polgo-mongo:latest
          ${{ env.DOCKER_USERNAME }}/polgo-mongo:${{ steps.meta.outputs.sha_short }}
          ${{ env.DOCKER_USERNAME }}/polgo-mongo:${{ steps.meta.outputs.date }}
        cache-from: type=registry,ref=${{ env.DOCKER_USERNAME }}/polgo-mongo:latest
        cache-to: type=inline
        platforms: linux/amd64

    - name: Build and push Backend
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: true
        tags: |
          ${{ env.DOCKER_USERNAME }}/polgo-backend:latest
          ${{ env.DOCKER_USERNAME }}/polgo-backend:${{ steps.meta.outputs.sha_short }}
          ${{ env.DOCKER_USERNAME }}/polgo-backend:${{ steps.meta.outputs.date }}
        cache-from: type=registry,ref=${{ env.DOCKER_USERNAME }}/polgo-backend:latest
        cache-to: type=inline
        platforms: linux/amd64

    - name: Build and push Frontend
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: true
        tags: |
          ${{ env.DOCKER_USERNAME }}/polgo-frontend:latest
          ${{ env.DOCKER_USERNAME }}/polgo-frontend:${{ steps.meta.outputs.sha_short }}
          ${{ env.DOCKER_USERNAME }}/polgo-frontend:${{ steps.meta.outputs.date }}
        cache-from: type=registry,ref=${{ env.DOCKER_USERNAME }}/polgo-frontend:latest
        cache-to: type=inline
        platforms: linux/amd64

    - name: Create deployment summary
      run: |
        echo "## 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ **All images built and pushed successfully!**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📦 Images" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Service | Tags |" >> $GITHUB_STEP_SUMMARY
        echo "|---------|------|" >> $GITHUB_STEP_SUMMARY
        echo "| MongoDB | \`latest\`, \`${{ steps.meta.outputs.sha_short }}\`, \`${{ steps.meta.outputs.date }}\` |" >> $GITHUB_STEP_SUMMARY
        echo "| Backend | \`latest\`, \`${{ steps.meta.outputs.sha_short }}\`, \`${{ steps.meta.outputs.date }}\` |" >> $GITHUB_STEP_SUMMARY
        echo "| Frontend | \`latest\`, \`${{ steps.meta.outputs.sha_short }}\`, \`${{ steps.meta.outputs.date }}\` |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔗 Docker Hub Links" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- [polgo-mongo](https://hub.docker.com/r/${{ env.DOCKER_USERNAME }}/polgo-mongo)" >> $GITHUB_STEP_SUMMARY
        echo "- [polgo-backend](https://hub.docker.com/r/${{ env.DOCKER_USERNAME }}/polgo-backend)" >> $GITHUB_STEP_SUMMARY
        echo "- [polgo-frontend](https://hub.docker.com/r/${{ env.DOCKER_USERNAME }}/polgo-frontend)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📝 Deploy Commands" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Desenvolvimento (build local):**" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
        echo "docker compose up -d --build" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Produção (usar imagens do Hub):**" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
        echo "docker compose pull" >> $GITHUB_STEP_SUMMARY
        echo "docker compose up -d" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

    - name: Notify build success
      run: |
        echo "✅ Build and push completed successfully!"
        echo "📦 Images available at: https://hub.docker.com/u/${{ env.DOCKER_USERNAME }}"

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
    - name: Deploy to Digital Ocean
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.DO_HOST }}
        username: ${{ secrets.DO_USER }}
        key: ${{ secrets.DO_SSH_KEY }}
        port: 22
        script: |
          echo "🚀 Starting deployment..."
          cd /opt/polgo
          
          echo "📥 Pulling latest images..."
          docker compose pull
          
          echo "🔄 Restarting containers..."
          docker compose up -d
          
          echo "🧹 Cleaning up old images..."
          docker image prune -f
          
          echo "✅ Deployment completed!"
          docker compose ps

    - name: Deployment summary
      run: |
        echo "## 🎉 Deployment Completed" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ Application successfully deployed to Digital Ocean!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "🌐 **Server:** ${{ secrets.DO_HOST }}" >> $GITHUB_STEP_SUMMARY

